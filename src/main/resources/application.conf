akka {
  loglevel = "INFO"

  actor {
    provider = "cluster"

    serialization-bindings {
      "com.trueaccord.scalapb.GeneratedMessage" = proto
    }
  }

  remote {
    log-remote-lifecycle-events = off
    netty.tcp {
      hostname = "127.0.0.1"
      hostname = ${?AKKA_HOSTNAME}
      port = 2551
      port = ${?AKKA_PORT}
      bind-hostname = "0.0.0.0"
    }
  }

  cluster {
    seed-nodes = [
      "akka.tcp://cluster@127.0.0.1:2551"
    ]

    sharding {
      rebalance-threshold = 3
      rebalance-interval = 1.second
      max-simultaneous-rebalance = 3
    }
  }

  persistence {
    journal.plugin = "akka-persistence-redis.journal"
  }
}

akka-persistence-redis {
  journal.redis {
    host = localhost
    host = ${?REDIS_HOST}
  }

  read-journal {
    redis = ${akka-persistence-redis.journal.redis}
  }
}

net.shiroka.cat {
  sensor {
    interval = 100.millis
    batch.size = 100
  }

  profiler {
    interval = 5.seconds
    stdout = false
  }

  cat {
    max-entities = 120e+6
    num-of-shards = 1000
    time-to-expire = 3.minutes
    remember-entities = false
  }
}
