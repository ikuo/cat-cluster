akka {
  loglevel = "INFO"
  loglevel = ${?LOGLEVEL}

  actor {
    provider = "cluster"

    serialization-bindings {
      "com.trueaccord.scalapb.GeneratedMessage" = proto
    }
  }

  remote {
    log-remote-lifecycle-events = off
    netty.tcp {
      hostname = "127.0.0.1"
      hostname = ${?AKKA_HOSTNAME}
      port = 2551
      port = ${?AKKA_PORT}
      bind-hostname = "0.0.0.0"
    }
  }

  cluster {
    seed-nodes = [
      "akka.tcp://cluster@127.0.0.1:2551"
    ]

    sharding {
      rebalance-threshold = 3
      rebalance-threshold = ${?REBALANCE_THRESHOLD}
      rebalance-interval = 1.second
      rebalance-interval = ${?REBALANCE_INTERVAL}
      max-simultaneous-rebalance = 3
      max-simultaneous-rebalance = ${?MAX_SIMULTANEOUS-REBALANCE}
    }
  }

  persistence {
    journal.plugin = "akka-persistence-redis.journal"
  }
}

akka-persistence-redis {
  journal.redis {
    host = localhost
    host = ${?REDIS_HOST}
  }

  read-journal {
    redis = ${akka-persistence-redis.journal.redis}
  }
}

net.shiroka {
  sensor {
    interval = 1.second
    interval = ${?SENSOR_INTERVAL}
    batch.size = 100
    batch.size = ${?SENSOR_BATCH_SIZE}
  }

  profiler {
    interval = 5.seconds
    interval = ${?PROFILER_INTERVAL}
    stdout = false
    stdout = ${?PROFILER_STDOUT}
  }

  cat {
    max-entities = 4e+6
    max-entities = ${?CATS_MAX}
    num-of-shards = 1000
    num-of-shards = ${?CAT_NUM_OF_SHARDS}
    remember-entities = false
    remember-entities = ${?CAT_REMEMBER_ENTITIES}
  }
}
